#!/usr/bin/env bash

git_name="Aleksander Mietinen"
git_email="aleksander@mietinen.net"
git_url_ssh="git@github.com:mietinen"
git_url_https="https://github.com/mietinen"
git_repos=("shell" "desktop")

# check if git is installed
if ! command -v git >/dev/null; then
    echo "Git is not installed, exiting"
    exit 1
fi

# Use ssh instead of https?
command -v ssh-keygen >/dev/null && read -rep "Use ssh instead of https? [y/N] " usessh

if [ "$usessh" != "${usessh#[Yy]}" ]; then
    # Generate SSH key if it doesn't exist
    [ -f ~/.ssh/id_ed25519.pub ] || ssh-keygen -a 100 -t ed25519 -f ~/.ssh/id_ed25519
    echo "Copy SSH key and add you your git remote and press enter to continue."
    command -v xclip >/dev/null && xclip -sel clip < ~/.ssh/id_ed25519.pub
    cat ~/.ssh/id_ed25519.pub
    read -r
    giturl="$git_url_ssh"
else
    giturl="$git_url_https"
fi

# Some misc setup
cd "$HOME" || exit
mkdir -p "$HOME/.dotfiles"
grep "^.dotfiles$" "$HOME/.gitignore" >/dev/null 2>&1 || echo ".dotfiles" >> "$HOME/.gitignore"
mkdir -p "${XDG_CONFIG_HOME:-$HOME/.config}/git"
touch "${XDG_CONFIG_HOME:-$HOME/.config}/git/config"

git config --global user.name "$git_name"
git config --global user.email "$git_email"
git config --global diff.tool vimdiff
git config --global pull.rebase false
git config --global alias.lol "log --graph --pretty=format:'%C(auto)%h%d %C(cyan)(%ar) %C(green)%cn%C(auto) %s'"

for repo in "${git_repos[@]}"; do
    read -rep "Clone $repo config repository? [y/N] " clone
    [ "$clone" = "${clone#[Yy]}" ] && continue
    if [ -d "$HOME/.dotfiles/$repo" ] ; then
        echo "~/.dotfiles/$repo already exists, skipping."
    else
        git clone --bare "$giturl/$repo.git" "$HOME/.dotfiles/$repo"
        git --git-dir="$HOME/.dotfiles/$repo" --work-tree="$HOME" config --local status.showUntrackedFiles no
        git --git-dir="$HOME/.dotfiles/$repo" --work-tree="$HOME" config --local remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        git --git-dir="$HOME/.dotfiles/$repo" --work-tree="$HOME" checkout 2>&1 | grep -E "\s+\." | awk '{print $1}' | xargs -I{} rm -f "{}"
        git --git-dir="$HOME/.dotfiles/$repo" --work-tree="$HOME" checkout
        git --git-dir="$HOME/.dotfiles/$repo" --work-tree="$HOME" fetch
        git --git-dir="$HOME/.dotfiles/$repo" --work-tree="$HOME" branch --set-upstream-to=origin/master master
    fi
    echo
done

# vim: set ts=4 sw=4 tw=0 et :
